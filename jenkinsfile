pipeline {
    agent any

  stages {
     stage('Git checkout') {
            steps {
               script {
                  def branch_name = 'master'

                 if (getBinding().hasVariable("branch_name")) {
                   branch_name = 'branch_name'
            }
       }    
                echo 'Fetching code from Git...'
                git url: 'https://github.com/rgaddama/myapp.git'
                checkout scm
            }
        }

     stage ('Build image') {
            steps {
              script {
                 def project_name = 'project_name'
                 def tag_version = 'tag_version'
               }
                 sh("docker build -t ${project_name} .")
           }
        }
     stage ('Tag image') {
           steps {
               sh("docker tag ${project_name} artifactory.teslamotors.com:2038/${project_name}:${tag_version}_${BUILD_NUMBER}")
           }
        }

     stage ('Push image to registry') {
            steps {
               sh("docker push artifactory.teslamotors.com:2038/${project_name}:${tag_version}_${BUILD_NUMBER}")
           }
        }

     stage ('Kuberenetes Services up') {
            steps {
              sh("sed -i.bak 's#artifactory.teslamotors.com:2038/my-app:0.1.0#artifactory.teslamotors.com:2038/${project_name}:${tag_version}_${BUILD_NUMBER}#' ./k8s/dev/*.yaml")
              sh("kubectl --namespace=default apply -f k8s/services/")
              sh("kubectl --namespace=default apply -f k8s/dev/")
              sh("echo http://`kubectl --namespace=default get all`")
          }
        }
  }
}
